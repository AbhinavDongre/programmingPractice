Given an array A, find the size of the smallest subarray such that it contains at least one occurrence of the maximum value of the array
and at least one occurrence of the minimum value of the array.


public class Solution 
{
    public int solve(int[] A) 
    {
        //find min and max of array , it will take O(n) time
        int min=A[0], max=A[0];
        int ans=A.length,subLen;
        for(int i=0;i<A.length;i++)
        {
            min= Math.min(A[i],min);
            max=Math.max(A[i],max);
        }

        if(min==max){// when all array elements are same
            return 1;
        }

        // finding smallest subarray containing max and min
        
         for(int i=0;i<A.length;i++)
        {
           if(A[i]==max )
           {
              for(int j=i+1;j<A.length;j++)
              {
                  if(A[j]==min)
                  {
                      subLen=j-i+1;
                      ans=Math.min(subLen,ans);
                      break;
                  }
              }
           }
           if(A[i]==min)
           {
               for(int j=i+1;j<A.length;j++)
              {
                  if(A[j]==max)
                  {
                      subLen=j-i+1;
                      ans=Math.min(subLen,ans);
                      break;
                  }
              }
             
           }


        }
        return ans;
    }
}
